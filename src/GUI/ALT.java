/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Controladores.ControladorBackProp;
import Controladores.ControladorRedeNeural;
import RedeNeural.Neuronio;
import java.util.Vector;
import javax.swing.JOptionPane;

/**
 *
 * @author jean
 */
public final class ALT extends javax.swing.JDialog {

    /**
     * Creates new form ALTP2
     *
     * @param parent
     * @param modal
     */
    public ALT(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        initTextArea();
        initJComboBox();
    }

    public void initJComboBox() {

        Vector<String> comboBoxItems = new Vector();

        if (jComboBoxCamada.getSelectedIndex() == 0) {

            for (Neuronio x : ControladorRedeNeural.getRedeNeural().getCamadaEntrada().getArrayListNeuronios()) {
                comboBoxItems.add(x.getName());
            }

            jComboBoxDe.setModel(new javax.swing.DefaultComboBoxModel<>(comboBoxItems));

            comboBoxItems = new Vector<>();

            for (Neuronio x : ControladorRedeNeural.getRedeNeural().getCamadaOculta().getArrayListNeuronios()) {
                comboBoxItems.add(x.getName());
            }

            jComboBoxPara.setModel(new javax.swing.DefaultComboBoxModel<>(comboBoxItems));

        } else {

            for (Neuronio x : ControladorRedeNeural.getRedeNeural().getCamadaOculta().getArrayListNeuronios()) {
                comboBoxItems.add(x.getName());
            }

            jComboBoxDe.setModel(new javax.swing.DefaultComboBoxModel<>(comboBoxItems));

            comboBoxItems = new Vector<>();

            for (Neuronio x : ControladorRedeNeural.getRedeNeural().getCamadaSaida().getArrayListNeuronios()) {
                comboBoxItems.add(x.getName());
            }

            jComboBoxPara.setModel(new javax.swing.DefaultComboBoxModel<>(comboBoxItems));

        }

    }

    public void initTextArea() {

        String text = "Rede Neural";

        text += "\n\nFunção de transferência: ";

        switch (ControladorBackProp.getFuncaoTransferencia()) {
            case 0:
                text += "Logística";
                break;
            case 1:
                text += "Tangente Hiperbólica";
                break;
        }

        text += "\n\nCamada Entrada\n\nNeurônios: ";
        text = ControladorRedeNeural.getRedeNeural().getCamadaEntrada().getArrayListNeuronios().stream().map((x) -> x.getName() + " ").reduce(text, String::concat);

        text += "\n\nCamada Oculta\n\nNeurônios: ";
        text = ControladorRedeNeural.getRedeNeural().getCamadaOculta().getArrayListNeuronios().stream().map((x) -> x.getName() + " ").reduce(text, String::concat);

        text += "\n\nCamada Saída\n\nNeurônios: ";
        text = ControladorRedeNeural.getRedeNeural().getCamadaSaida().getArrayListNeuronios().stream().map((x) -> x.getName() + " ").reduce(text, String::concat);

        text += "\n\nPesos camada oculta\n\n";
        for (Neuronio x : ControladorRedeNeural.getRedeNeural().getCamadaEntrada().getArrayListNeuronios()) {
            text = x.getArrayListPesos().stream().map((y) -> x.getName() + " -- " + Double.toString(y.getPeso()) + " --> " + y.getNeuronio().getName() + "\n").reduce(text, String::concat);
        }

        text += "\n\nPesos camada saída\n\n";
        for (Neuronio x : ControladorRedeNeural.getRedeNeural().getCamadaOculta().getArrayListNeuronios()) {
            text = x.getArrayListPesos().stream().map((y) -> x.getName() + " -- " + Double.toString(y.getPeso()) + " --> " + y.getNeuronio().getName() + "\n").reduce(text, String::concat);
        }

        jTextAreaRede.setText(text);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaRede = new javax.swing.JTextArea();
        jButtonFinalizar = new javax.swing.JButton();
        jComboBoxDe = new javax.swing.JComboBox<>();
        jTextFieldPeso = new javax.swing.JTextField();
        jComboBoxPara = new javax.swing.JComboBox<>();
        jButtonInserir = new javax.swing.JButton();
        jLabelCamada = new javax.swing.JLabel();
        jComboBoxCamada = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTextAreaRede.setColumns(20);
        jTextAreaRede.setRows(5);
        jScrollPane1.setViewportView(jTextAreaRede);

        jButtonFinalizar.setText("finalizar");
        jButtonFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFinalizarActionPerformed(evt);
            }
        });

        jComboBoxDe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxDeActionPerformed(evt);
            }
        });

        jComboBoxPara.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxParaActionPerformed(evt);
            }
        });

        jButtonInserir.setText("inserir");
        jButtonInserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInserirActionPerformed(evt);
            }
        });

        jLabelCamada.setText("Camada");

        jComboBoxCamada.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Oculta", "Saída" }));
        jComboBoxCamada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxCamadaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonFinalizar))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jComboBoxDe, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldPeso, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBoxPara, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                        .addComponent(jButtonInserir))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelCamada)
                            .addComponent(jComboBoxCamada, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelCamada)
                .addGap(18, 18, 18)
                .addComponent(jComboBoxCamada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxDe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldPeso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxPara, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonInserir))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonFinalizar)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonInserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInserirActionPerformed
        // TODO add your handling code here:
        try {
            if (jComboBoxCamada.getSelectedIndex() == 0) {
                ControladorRedeNeural.getRedeNeural().getCamadaEntrada().getArrayListNeuronios().get(jComboBoxDe.getSelectedIndex()).getArrayListPesos().get(jComboBoxPara.getSelectedIndex()).setPeso(Double.parseDouble(jTextFieldPeso.getText()));
            } else {
                ControladorRedeNeural.getRedeNeural().getCamadaOculta().getArrayListNeuronios().get(jComboBoxDe.getSelectedIndex()).getArrayListPesos().get(jComboBoxPara.getSelectedIndex()).setPeso(Double.parseDouble(jTextFieldPeso.getText()));
            }

            initTextArea();
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Valores incorretos");
        }
    }//GEN-LAST:event_jButtonInserirActionPerformed

    private void jComboBoxDeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxDeActionPerformed
        // TODO add your handling code here:
        if (jComboBoxCamada.getSelectedIndex() == 0) {
            jTextFieldPeso.setText(Double.toString(ControladorRedeNeural.getRedeNeural().getCamadaEntrada().getArrayListNeuronios().get(jComboBoxDe.getSelectedIndex()).getArrayListPesos().get(jComboBoxPara.getSelectedIndex()).getPeso()));
        } else {
            jTextFieldPeso.setText(Double.toString(ControladorRedeNeural.getRedeNeural().getCamadaOculta().getArrayListNeuronios().get(jComboBoxDe.getSelectedIndex()).getArrayListPesos().get(jComboBoxPara.getSelectedIndex()).getPeso()));
        }

    }//GEN-LAST:event_jComboBoxDeActionPerformed

    private void jComboBoxParaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxParaActionPerformed
        // TODO add your handling code here:
        if (jComboBoxCamada.getSelectedIndex() == 0) {
            jTextFieldPeso.setText(Double.toString(ControladorRedeNeural.getRedeNeural().getCamadaEntrada().getArrayListNeuronios().get(jComboBoxDe.getSelectedIndex()).getArrayListPesos().get(jComboBoxPara.getSelectedIndex()).getPeso()));
        } else {
            jTextFieldPeso.setText(Double.toString(ControladorRedeNeural.getRedeNeural().getCamadaOculta().getArrayListNeuronios().get(jComboBoxDe.getSelectedIndex()).getArrayListPesos().get(jComboBoxPara.getSelectedIndex()).getPeso()));
        }

    }//GEN-LAST:event_jComboBoxParaActionPerformed

    private void jButtonFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFinalizarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButtonFinalizarActionPerformed

    private void jComboBoxCamadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxCamadaActionPerformed
        // TODO add your handling code here:
        initJComboBox();
    }//GEN-LAST:event_jComboBoxCamadaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonFinalizar;
    private javax.swing.JButton jButtonInserir;
    private javax.swing.JComboBox<String> jComboBoxCamada;
    private javax.swing.JComboBox<String> jComboBoxDe;
    private javax.swing.JComboBox<String> jComboBoxPara;
    private javax.swing.JLabel jLabelCamada;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaRede;
    private javax.swing.JTextField jTextFieldPeso;
    // End of variables declaration//GEN-END:variables
}
